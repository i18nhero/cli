/*
 * @i18nhero/public-api
 *
 * Public api for i18nhero.com
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::codegen::public_api::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Project {
    #[serde(rename = "localizations")]
    pub localizations: Vec<models::ProjectLocalization>,
    #[serde(rename = "_id")]
    pub _id: String,
    #[serde(rename = "title")]
    pub title: String,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "organization_id")]
    pub organization_id: String,
    #[serde(rename = "is_public")]
    pub is_public: bool,
    #[serde(rename = "auto_translate")]
    pub auto_translate: bool,
    #[serde(rename = "auto_approve_translations")]
    pub auto_approve_translations: bool,
    #[serde(rename = "allow_ai_translations")]
    pub allow_ai_translations: bool,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "modified_at")]
    pub modified_at: String,
}

impl Project {
    pub fn new(
        localizations: Vec<models::ProjectLocalization>,
        _id: String,
        title: String,
        description: String,
        organization_id: String,
        is_public: bool,
        auto_translate: bool,
        auto_approve_translations: bool,
        allow_ai_translations: bool,
        created_at: String,
        modified_at: String,
    ) -> Project {
        Project {
            localizations,
            _id,
            title,
            description,
            organization_id,
            is_public,
            auto_translate,
            auto_approve_translations,
            allow_ai_translations,
            created_at,
            modified_at,
        }
    }
}
